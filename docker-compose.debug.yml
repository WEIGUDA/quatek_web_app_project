version: "3"
services:
  flask:
    image: quatek_esd_backend
    build:
      context: ./backend
      dockerfile: Dockerfile-debug
    command: python run.py
    volumes:
      - ./backend:/app
    restart: always
    ports:
      - "5001:5001"
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - quatek_net
  celery_worker:
    image: quatek_esd_backend
    restart: always
    ports:
      - "5858:5858"
    command: celery worker -A app.mod_task.tasks -P eventlet
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - quatek_net
  celery_beat:
    image: quatek_esd_backend
    restart: always
    command: celery -A app.mod_task.tasks beat -S celerybeatmongo.schedulers.MongoScheduler
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - quatek_net
  vue:
    image: quatek_esd_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-debug
    restart: always
    command: npm run serve
    volumes:
      - ./frontend:/app
    ports:
      - "80:8080"
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - quatek_net
  mongo:
    image: "mongo:4"
    restart: always
    ports:
      - "27017:27017"
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - quatek_net
    volumes:
      - "mongodb:/data/db"
  redis:
    image: "redis:5-alpine"
    restart: always
    ports:
      - "6379:6379"
    deploy:
      mode: global
      restart_policy:
        condition: any
    networks:
      - quatek_net
    volumes:
      - "redis:/data"
volumes:
  redis:
  mongodb:
networks:
  quatek_net:

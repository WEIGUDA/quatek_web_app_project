version: '3'

services:
  mongo:
    image: mongo:4
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
    volumes:
      - mongodb:/data/db

  redis:
    image: redis:4-alpine
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
    volumes:
      - redis:/data

  flask:
    image: backend
    build: ./backend
    ports:
      - '5001:5001'
    depends_on:
      - mongo
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net

  celery_worker:
    image: backend
    build: ./backend
    ports:
      - '5858:5858'
    command: pipenv run celery -A app.tasks worker
    depends_on:
      - flask
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net

  celery_beat:
    image: backend
    build: ./backend
    command: pipenv run celery -A app.tasks beat -S celerybeatmongo.schedulers.MongoScheduler
    depends_on:
      - flask
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net

  vue:
    image: frontend
    build: ./frontend
    ports:
      - '80:80'
    depends_on:
      - flask
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net

  mongo-express:
    image: mongo-express
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=quatek
      - ME_CONFIG_BASICAUTH_PASSWORD=quatek
    ports:
      - '8081:8081'
    depends_on:
      - mongo
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net

volumes:
  redis:
  mongodb:
networks:
  quatek_net:

version: "3"
services:
  mongo:
    image: "mongo:4"
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
    volumes:
      - "mongodb:/data/db"
  redis:
    image: "redis:4-alpine"
    restart: always
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
    volumes:
      - "redis:/data"
  flask:
    image: backend
    build: ./backend
    restart: always
    ports:
      - "5001:5001"
    depends_on:
      - mongo
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
  celery_worker:
    image: backend
    restart: always
    ports:
      - "5858:5858"
    command: celery -A app.mod_task.tasks worker
    depends_on:
      - flask
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
  celery_beat:
    image: backend
    restart: always
    command: >-
      celery -A app.mod_task.tasks beat -S
      celerybeatmongo.schedulers.MongoScheduler
    depends_on:
      - flask
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
  vue:
    image: frontend
    build: ./frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - flask
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
  mongo-express:
    image: mongo-express
    restart: always
    environment:
      - ME_CONFIG_BASICAUTH_USERNAME=quatek
      - ME_CONFIG_BASICAUTH_PASSWORD=quatek
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: any
        delay: 10s
        window: 60s
    networks:
      - quatek_net
volumes:
  redis: null
  mongodb: null
networks:
  quatek_net: null
